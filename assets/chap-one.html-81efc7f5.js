const e=JSON.parse('{"key":"v-3bf04cb7","path":"/notes/jvm/chap-one.html","title":"第一章 Java内存区域与内存溢出异常","lang":"zh-CN","frontmatter":{"title":"第一章 Java内存区域与内存溢出异常","order":1,"tag":["JVM"],"description":"对象内存分配方式 指针碰撞 假设 Java 堆中内存是绝对规整的，所有被使用过的内存都被放在一边，空闲的内存被放在另一边，中间放着一个指针作为分界点的指示器，那所分配内存就仅仅是把那个指针向空闲空间方向挪动一段与对象大小相等的距离，这种分配方式称为“指针碰撞”(Bump The Pointer)。 空闲列表 如果 Java 堆中的内存并不是规整的，已被...","head":[["meta",{"property":"og:url","content":"https://piaolingluo.github.io/notes/jvm/chap-one.html"}],["meta",{"property":"og:site_name","content":"BroNotes(学长笔记)"}],["meta",{"property":"og:title","content":"第一章 Java内存区域与内存溢出异常"}],["meta",{"property":"og:description","content":"对象内存分配方式 指针碰撞 假设 Java 堆中内存是绝对规整的，所有被使用过的内存都被放在一边，空闲的内存被放在另一边，中间放着一个指针作为分界点的指示器，那所分配内存就仅仅是把那个指针向空闲空间方向挪动一段与对象大小相等的距离，这种分配方式称为“指针碰撞”(Bump The Pointer)。 空闲列表 如果 Java 堆中的内存并不是规整的，已被..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://piaolingluo.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-29T15:49:20.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"第一章 Java内存区域与内存溢出异常"}],["meta",{"property":"article:author","content":"piaolingluo"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:modified_time","content":"2023-09-29T15:49:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第一章 Java内存区域与内存溢出异常\\",\\"image\\":[\\"https://piaolingluo.github.io/\\"],\\"dateModified\\":\\"2023-09-29T15:49:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"piaolingluo\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"对象内存分配方式","slug":"对象内存分配方式","link":"#对象内存分配方式","children":[{"level":3,"title":"指针碰撞","slug":"指针碰撞","link":"#指针碰撞","children":[]},{"level":3,"title":"空闲列表","slug":"空闲列表","link":"#空闲列表","children":[]}]},{"level":2,"title":"对象的内存布局","slug":"对象的内存布局","link":"#对象的内存布局","children":[{"level":3,"title":"对象头","slug":"对象头","link":"#对象头","children":[]},{"level":3,"title":"实例数据","slug":"实例数据","link":"#实例数据","children":[]},{"level":3,"title":"对齐填充","slug":"对齐填充","link":"#对齐填充","children":[]}]},{"level":2,"title":"对象的访问定位","slug":"对象的访问定位","link":"#对象的访问定位","children":[{"level":3,"title":"句柄访问","slug":"句柄访问","link":"#句柄访问","children":[]},{"level":3,"title":"直接指针访问","slug":"直接指针访问","link":"#直接指针访问","children":[]}]},{"level":2,"title":"运行时数据区和直接内存 OOM 异常情况","slug":"运行时数据区和直接内存-oom-异常情况","link":"#运行时数据区和直接内存-oom-异常情况","children":[{"level":3,"title":"Java 堆溢出","slug":"java-堆溢出","link":"#java-堆溢出","children":[]},{"level":3,"title":"虚拟机栈和本地方法栈溢出","slug":"虚拟机栈和本地方法栈溢出","link":"#虚拟机栈和本地方法栈溢出","children":[]},{"level":3,"title":"方法区和运行时常量池溢出","slug":"方法区和运行时常量池溢出","link":"#方法区和运行时常量池溢出","children":[]},{"level":3,"title":"本机直接内存溢出","slug":"本机直接内存溢出","link":"#本机直接内存溢出","children":[]}]}],"git":{"createdTime":1696002560000,"updatedTime":1696002560000,"contributors":[{"name":"gechenpeng","email":"731269319@qq.com","commits":1}]},"readingTime":{"minutes":7.72,"words":2317},"filePathRelative":"notes/jvm/chap-one.md","localizedDate":"2023年9月29日","autoDesc":true}');export{e as data};
